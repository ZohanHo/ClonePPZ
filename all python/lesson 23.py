""""""
"""Функция zip - В Pyhon функция zip позволяет пройтись одновременно по нескольким итерируемым объектам (спискам и др.):"""

a = [10, 20, 30, 40]
b = ['a', 'b', 'c', 'd', 'e']

for i, j in zip(a, b):
    print(i, j)

# 10 a
# 20 b
# 30 c
# 40 d

"""
Здесь выражение zip(a, b) создает объект-итератор, 
из которого при каждом обороте цикла извлекается кортеж, 
состоящий из двух элементов. Первый берется из списка a, второй - из b.
"""
for i in zip(a, b):
    print(i, type(i))

# (10, 'a') <class 'tuple'>
# (20, 'b') <class 'tuple'>
# (30, 'c') <class 'tuple'>
# (40, 'd') <class 'tuple'>

"""Если требуется получить не итератор, возвращаемый zip(), а список из элементов, 
то к объекту zip применима функция list, которая преобразует итератор в список:"""

a = [10, 20, 30, 40]
c = [1.1, 1.2, 1.3, 1.4]
ac = zip(a, c)
print(type(ac)) # <class 'zip'>
ac = list(ac)
print(type(ac)) # <class 'list'>
print(ac)  # [(10, 1.1), (20, 1.2), (30, 1.3), (40, 1.4)]


