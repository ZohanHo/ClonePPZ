"""Декораторы - для модификации функций с помощь других функций,
когда нужно изменить функцию, но не хотим ее модефицировать"""

def decor(func): # функцию которую хотим декорировать можем передать в параметр, что бы можно было ее использовать
    def wrap():
        print("===========")
        func()  # Вызываем функцию которую передали как параметр функции декоратору
        print("===========")
    return wrap

def print_text():
    print("hello world")


print_text = decor(print_text) # Передаем функцию как аргумент
print_text()

print("---------------")

"""такая же функция с использованием декоратора"""
def decor(func): # функцию которую хотим декорировать можем передать в параметр, что бы можно было ее использовать
    def wrap():
        print("===========")
        func()  # Вызываем функцию которую передали как параметр функции декоратору
        print("===========")
    return wrap

@decor  # функция которую декорируем будет передана другой функции в аргумент, и использована в теле
def print_text():
    print("hello world")

print_text()
